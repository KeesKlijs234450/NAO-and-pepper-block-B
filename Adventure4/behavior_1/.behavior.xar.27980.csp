<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Input name="adventure" type="0" type_size="1" nature="4" stm_value_name="adventure" inner="1" tooltip="adventure desc" id="4" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="84.0896">
            <Box name="Switch Case" id="3" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="248" y="339">
              <bitmap>media/images/box/interaction/choice.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(1)):
			self.output_1(p)
		elif(p == self.typeConversion(2)):
			self.output_2(p)
		elif(p == self.typeConversion(3)):
			self.output_3(p)
		elif(p == self.typeConversion(4)):
			self.output_4(p)
		elif(p == self.typeConversion(5)):
			self.output_5(p)
		elif(p == self.typeConversion(6)):
			self.output_6(p)
		elif(p == self.typeConversion(7)):
			self.output_7(p)
		elif(p == self.typeConversion(8)):
			self.output_8(p)
		elif(p == self.typeConversion(9)):
			self.output_9(p)
		elif(p == self.typeConversion(10)):
			self.output_10(p)
		elif(p == self.typeConversion(11)):
			self.output_11(p)
		elif(p == self.typeConversion(12)):
			self.output_12(p)
		elif(p == self.typeConversion(13)):
			self.output_13(p)
		elif(p == self.typeConversion(14)):
			self.output_14(p)
		elif(p == self.typeConversion(15)):
			self.output_15(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                </content>
              </script>
              <pluginContent>
                <keywords>
                  <keyword>1</keyword>
                  <keyword>2</keyword>
                  <keyword>3</keyword>
                  <keyword>4</keyword>
                  <keyword>5</keyword>
                  <keyword>6</keyword>
                  <keyword>7</keyword>
                  <keyword>8</keyword>
                  <keyword>9</keyword>
                  <keyword>10</keyword>
                  <keyword>11</keyword>
                  <keyword>12</keyword>
                  <keyword>13</keyword>
                  <keyword>14</keyword>
                  <keyword>15</keyword>
                  <keyword></keyword>
                  <keyword></keyword>
                  <keyword></keyword>
                  <keyword></keyword>
                  <keyword></keyword>
                  <keyword></keyword>
                </keywords>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
              <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
              <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
              <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
              <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
              <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
              <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
              <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
              <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
              <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
              <Output name="output_9" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="12" />
              <Output name="output_10" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="13" />
              <Output name="output_11" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="14" />
              <Output name="output_12" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="15" />
              <Output name="output_13" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="16" />
              <Output name="output_14" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="17" />
              <Output name="output_15" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="18" />
              <Output name="output_16" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="19" />
              <Output name="output_17" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="20" />
              <Output name="output_18" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="21" />
              <Output name="output_19" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="22" />
              <Output name="output_20" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="23" />
            </Box>
            <Box name="Goto Posture" id="8" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="59" y="1">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
              <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
              <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                <Choice value="Crouch" />
                <Choice value="LyingBack" />
                <Choice value="LyingBelly" />
                <Choice value="Sit" />
                <Choice value="SitRelax" />
                <Choice value="StandInit" />
                <Choice value="Stand" />
                <Choice value="StandZero" />
              </Parameter>
              <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
              <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
              <Resource name="All motors" type="Lock" timeout="0" />
              <Resource name="Stiffness" type="Lock" timeout="0" />
            </Box>
            <Box name="HeadUpLeft" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="922" y="202">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="24">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                    <Key frame="8" value="5.88634" />
                    <Key frame="13" value="-5.01223" />
                    <Key frame="18" value="-22.2" />
                    <Key frame="24" value="-22.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                    <Key frame="8" value="-2.1997" />
                    <Key frame="13" value="-2.81494" />
                    <Key frame="18" value="47.5" />
                    <Key frame="24" value="47.5" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="end" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="447" y="0">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="-1">
                <BehaviorLayer name="arm">
                  <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_arm.png">
                    <Diagram>
                      <Box name="activeArms" id="1" localization="8" tooltip="activeArms" x="134" y="31">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Activate arms" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="" id="4" />
                      </Box>
                      <Box name="StandUp" id="2" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="295" y="27">
                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="25" size="25">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-31.8144" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-63.9876" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.186207" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="89.5593" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.23791" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-9.67049" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="15" value="33.0497" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="15" value="71.1899" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="15" value="0.167662" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="15" value="89.1246" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="15" value="-3.95753" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="15" value="-16.3503" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Exit" id="3" localization="8" tooltip="Exit the behavior." x="429" y="25">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            ALFrameManager.exitBehavior(self.parentId)
        except:
            pass

    def onInput_onStop(self):
        ""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="leg">
                  <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_arm.png">
                    <Diagram>
                      <Box name="activeArms" id="1" localization="8" tooltip="activeArms" x="134" y="31">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Activate arms" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="" id="4" />
                      </Box>
                      <Box name="StandUp" id="2" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="295" y="27">
                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="25" size="25">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-31.8144" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-63.9876" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="20" value="0.186207" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="89.5593" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="6.23791" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="20" value="-9.67049" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="15" value="33.0497" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="15" value="71.1899" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="15" value="0.167662" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="15" value="89.1246" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="15" value="-3.95753" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="15" value="-16.3503" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Exit" id="3" localization="8" tooltip="Exit the behavior." x="429" y="25">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            ALFrameManager.exitBehavior(self.parentId)
        except:
            pass

    def onInput_onStop(self):
        ""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="behavior_layer3">
                  <BehaviorKeyframe name="end" index="1" bitmap="media/images/box/movement/move_head.png">
                    <Diagram>
                      <Box name="activeHeadcheck" id="1" localization="8" tooltip="activeHeadcheck" x="113" y="27">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Activate head" inherits_from_parent="1" content_type="0" value="1" default_value="0" tooltip="" id="4" />
                      </Box>
                      <Box name="StandUp" id="2" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="271" y="18">
                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="25" size="25">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="19" value="-11.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="19" value="-0.441863" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Exit" id="3" localization="8" tooltip="Exit the behavior." x="406" y="18">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        try:
            ALFrameManager.exitBehavior(self.parentId)
        except:
            pass

    def onInput_onStop(self):
        ""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="HeadDownRight" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1081" y="198">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="25" size="25">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                    <Key frame="8" value="5.88634" />
                    <Key frame="15" value="5.7" />
                    <Key frame="21" value="5.7" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                    <Key frame="8" value="-2.1997" />
                    <Key frame="15" value="-26.2" />
                    <Key frame="21" value="-26.2" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="robot" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1580" y="10">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="-1">
                <BehaviorLayer name="head">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="activeHeadcheck" id="1" localization="8" tooltip="activeHeadcheck" x="80" y="49">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate head" )
        if( p == 1 ):
            self.eyesOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="eyesOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Activate head" inherits_from_parent="1" content_type="0" value="1" default_value="0" tooltip="" id="4" />
                      </Box>
                      <Box name="headCheckRandom" id="2" localization="8" tooltip="headchecks à intervales variables" x="234" y="50">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onStopped();
        pass

    def onInput_RandomInt_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="RandomInt_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="142" y="26">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                  <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                  <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                  <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                </Box>
                                <Box name="Wait" id="2" localization="8" tooltip="The wait that can be stopped immediately and reset at any time.&#x0A;&#x0A;Stopping the box won&apos;t output a signal.&#x0A;*** ref box in: ./4_localize/Time/Wait/ExampleWait.xar ***&#x0A;*** last modification date(svn): Version it! ***" x="261" y="273">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("timeout") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Start the timer with a specified period value (in seconds)" id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer" id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="send a bang after a certain amount of time.&#x0A;Warning: not outputted if stopped before time lapse." id="4" />
                                  <Parameter name="timeout" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="After how many seconds the box will timeout and stimulate its ouput." id="5" />
                                </Box>
                                <Box name="Dispatcher" id="3" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="312" y="26">
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		elif(p == self.typeConversion(3)):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>0</keyword>
                                      <keyword>1</keyword>
                                      <keyword>2</keyword>
                                      <keyword>3</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                  <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                  <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="8" />
                                </Box>
                                <Box name="Anim_headCheck4" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="308">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="14">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="6" value="5.88634" />
                                        <Key frame="14" value="-7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="6" value="-2.1997" />
                                        <Key frame="14" value="-2.72705" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Anim_headCheck2" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="119">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="14" value="5.88634" />
                                        <Key frame="20" value="-5.01223" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="14" value="-2.1997" />
                                        <Key frame="20" value="-2.81494" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Anim_headCheck3" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="213">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="27">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="9" value="5.88634" />
                                        <Key frame="19" value="-11" />
                                        <Key frame="27" value="-7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="9" value="-2.1997" />
                                        <Key frame="19" value="-2.28759" />
                                        <Key frame="27" value="-2.72705" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Anim_headCheck1" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="25">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="22">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="12" value="7" />
                                        <Key frame="22" value="-7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="12" value="-2.63916" />
                                        <Key frame="22" value="-2.81494" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="RandomInt" id="8" localization="8" tooltip="Generate a random number between 0 and a max number." x="751" y="154">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(1, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 1, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                  <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                  <Parameter name="max" inherits_from_parent="0" content_type="1" value="4" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                  <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                </Box>
                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="7" />
                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="arm">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="activeArms" id="1" localization="8" tooltip="activeArms" x="116" y="27">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        p = self.getParameter( "Activate arms" )
        if( p == 1 ):
            self.armsOk()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="armsOk" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Activate arms" inherits_from_parent="1" content_type="0" value="1" default_value="0" tooltip="" id="4" />
                      </Box>
                      <Box name="armsRandom" id="2" localization="8" tooltip="headchecks à intervales variables" x="296" y="35">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onStopped();
        pass

    def onInput_RandomInt_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="RandomInt_onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="RandomInt" id="1" localization="8" tooltip="Generate a random number between 0 and a max number." x="142" y="26">
                                  <bitmap>media/images/box/box-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(random.randint(0, len(self.aShuffled)), i)
            self.output_RandomValue(self.aShuffled[self.nIndex])
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            self.output_RandomValue(nVal)]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                                  <Output name="output_RandomValue" type="2" type_size="1" nature="2" inner="0" tooltip="The random value outputted" id="3" />
                                  <Parameter name="max" inherits_from_parent="0" content_type="1" value="3" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="4" />
                                  <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="5" />
                                </Box>
                                <Box name="Dispatcher" id="3" localization="8" tooltip="Dispatch an event carrying an information, depending on the information. Will be tested against all the values of the table, and the matching output will be stimulated !" plugin="dispatcher_plugin" x="312" y="26">
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		elif(p == self.typeConversion(1)):
			self.output_2(p)
		elif(p == self.typeConversion(2)):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>0</keyword>
                                      <keyword>1</keyword>
                                      <keyword>2</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If nothing has been matched in dispatcher." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                  <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="5" />
                                  <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="6" />
                                  <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO as been Automatically added by box. Read box tooltip for more information." id="7" />
                                </Box>
                                <Box name="Anim_headCheck2" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="119">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="22">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="7" value="-86.2354" />
                                        <Key frame="12" value="-86.2354" />
                                        <Key frame="17" value="-86.0846" />
                                        <Key frame="22" value="-86.2354" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="7" value="-59.8565" />
                                        <Key frame="12" value="-59.8565" />
                                        <Key frame="17" value="-59.3885" />
                                        <Key frame="22" value="-59.8565" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="7" value="0.882523" />
                                        <Key frame="12" value="0.882523" />
                                        <Key frame="17" value="0.882523" />
                                        <Key frame="22" value="0.882523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="7" value="42.4406" />
                                        <Key frame="12" value="42.4406" />
                                        <Key frame="17" value="20.0287" />
                                        <Key frame="22" value="42.4406" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="7" value="40.3461" />
                                        <Key frame="12" value="40.3461" />
                                        <Key frame="17" value="40.7384" />
                                        <Key frame="22" value="40.3461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="7" value="-74.0873" />
                                        <Key frame="12" value="-74.0873" />
                                        <Key frame="17" value="-73.7071" />
                                        <Key frame="22" value="-74.0873" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="7" value="86.1775" />
                                        <Key frame="12" value="86.1775" />
                                        <Key frame="17" value="85.9981" />
                                        <Key frame="22" value="86.1775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="7" value="54.5536" />
                                        <Key frame="12" value="54.5536" />
                                        <Key frame="17" value="54.1554" />
                                        <Key frame="22" value="54.5536" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="7" value="0.878203" />
                                        <Key frame="12" value="0.878203" />
                                        <Key frame="17" value="0.89" />
                                        <Key frame="22" value="0.878203" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="7" value="42.3988" />
                                        <Key frame="12" value="42.3988" />
                                        <Key frame="17" value="20.2436" />
                                        <Key frame="22" value="42.3988" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="7" value="-40.094" />
                                        <Key frame="12" value="-40.094" />
                                        <Key frame="17" value="-40.4943" />
                                        <Key frame="22" value="-40.094" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="7" value="10.2543" />
                                        <Key frame="12" value="10.2543" />
                                        <Key frame="17" value="10.465" />
                                        <Key frame="22" value="10.2543" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Anim_headCheck3" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="213">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="23">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="12" value="-86.2354" />
                                        <Key frame="18" value="-86.0846" />
                                        <Key frame="23" value="-86.2354" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="12" value="-59.8565" />
                                        <Key frame="18" value="-59.3885" />
                                        <Key frame="23" value="-59.8565" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="12" value="0.882523" />
                                        <Key frame="18" value="0.882523" />
                                        <Key frame="23" value="0.882523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="12" value="42.4406" />
                                        <Key frame="18" value="49.6562" />
                                        <Key frame="23" value="42.4406" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="12" value="40.3461" />
                                        <Key frame="18" value="40.7384" />
                                        <Key frame="23" value="40.3461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="12" value="-74.0873" />
                                        <Key frame="18" value="-73.7071" />
                                        <Key frame="23" value="-74.0873" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="12" value="86.1775" />
                                        <Key frame="18" value="85.9981" />
                                        <Key frame="23" value="86.1775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="12" value="54.5536" />
                                        <Key frame="18" value="54.1554" />
                                        <Key frame="23" value="54.5536" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="12" value="0.878203" />
                                        <Key frame="18" value="0.878856" />
                                        <Key frame="23" value="0.878203" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="12" value="42.3988" />
                                        <Key frame="18" value="49.8668" />
                                        <Key frame="23" value="42.3988" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="12" value="-40.094" />
                                        <Key frame="18" value="-40.4943" />
                                        <Key frame="23" value="-40.094" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="12" value="10.2543" />
                                        <Key frame="18" value="10.465" />
                                        <Key frame="23" value="10.2543" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="Anim_headCheck1" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="580" y="25">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="24">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="7" value="-67.8357" />
                                        <Key frame="11" value="-67.8357" />
                                        <Key frame="19" value="-86.2354" />
                                        <Key frame="24" value="-86.2354" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="7" value="-106.425" />
                                        <Key frame="11" value="-106.425" />
                                        <Key frame="19" value="-59.8565" />
                                        <Key frame="24" value="-59.8565" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="7" value="0.72" />
                                        <Key frame="11" value="0.72" />
                                        <Key frame="19" value="0.882523" />
                                        <Key frame="24" value="0.882523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="7" value="67.8929" />
                                        <Key frame="11" value="67.8929" />
                                        <Key frame="19" value="42.4406" />
                                        <Key frame="24" value="42.4406" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="7" value="7.03276" />
                                        <Key frame="11" value="7.03276" />
                                        <Key frame="19" value="40.3461" />
                                        <Key frame="24" value="40.3461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="7" value="14.524" />
                                        <Key frame="11" value="14.524" />
                                        <Key frame="19" value="-74.0873" />
                                        <Key frame="24" value="-74.0873" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="7" value="67.7305" />
                                        <Key frame="11" value="67.7305" />
                                        <Key frame="19" value="86.1775" />
                                        <Key frame="24" value="86.1775" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="7" value="106.57" />
                                        <Key frame="11" value="106.57" />
                                        <Key frame="19" value="54.5536" />
                                        <Key frame="24" value="54.5536" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="7" value="0.72" />
                                        <Key frame="11" value="0.72" />
                                        <Key frame="19" value="0.878203" />
                                        <Key frame="24" value="0.878203" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="7" value="68.4211" />
                                        <Key frame="11" value="68.4211" />
                                        <Key frame="19" value="42.3988" />
                                        <Key frame="24" value="42.3988" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="7" value="-7.02466" />
                                        <Key frame="11" value="-7.02466" />
                                        <Key frame="19" value="-40.094" />
                                        <Key frame="24" value="-40.094" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="7" value="-14.6949" />
                                        <Key frame="11" value="-14.6949" />
                                        <Key frame="19" value="10.2543" />
                                        <Key frame="24" value="10.2543" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="ExampleDialog" id="15" localization="8" tooltip="" x="323" y="0">
              <dialogFile>ExampleDialog/ExampleDialog.dlg</dialogFile>
              <bitmap>media/images/box/box-dialog.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="Set Language" id="16" localization="8" tooltip="Select the language you would like the robot to speak and understand. Any following call to&#x0A;ALSpeechRecognition (Speech Reco. box for instance) or ALTextToSpeech (Say box&#x0A;for instance) will use this language." x="181" y="0">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
              <Parameter name="Language" inherits_from_parent="0" content_type="3" value="English" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5">
                <Choice value="Arabic" />
                <Choice value="Brazilian" />
                <Choice value="Chinese" />
                <Choice value="Czech" />
                <Choice value="Danish" />
                <Choice value="Dutch" />
                <Choice value="English" />
                <Choice value="Finnish" />
                <Choice value="French" />
                <Choice value="German" />
                <Choice value="Greek" />
                <Choice value="Italian" />
                <Choice value="Japanese" />
                <Choice value="Korean" />
                <Choice value="Norwegian" />
                <Choice value="Polish" />
                <Choice value="Portuguese" />
                <Choice value="Russian" />
                <Choice value="Spanish" />
                <Choice value="Swedish" />
                <Choice value="Turkish" />
              </Parameter>
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="SetVoice" id="17" localization="8" tooltip="Set different types of voice for the robot" x="567" y="9">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')

    def onInput_onStart(self):


        try:
            self.tts.setParameter('pitchShift', self.getParameter("pitch shift"))
            self.tts.setParameter('doubleVoice', self.getParameter("double voice"))
            self.tts.setParameter('doubleVoiceLevel', self.getParameter("double voice level"))
            self.tts.setParameter('doubleVoiceTimeShift', self.getParameter("double voice timeshift"))

        except:
            pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="pitch shift" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="4" tooltip="applies a pitch shift to the voice. The value indicates the ratio between the new fundamental frequencies and the original one (examples: 2.0: an octave above, 1.5: a quint above).&#x0A;Acceptable range is [1.0 - 4]. 0 disables the effect." id="5" />
              <Parameter name="double voice" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="4" tooltip="adds a second voice to the first one. The value indicates the ratio between the second voice fundamental frequency and the first one.&#x0A;Acceptable range is [1.0 - 4]. 0 disables the effect." id="6" />
              <Parameter name="double voice level" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="4" tooltip="sets the gain of the additional voice compared to the original one.&#x0A;Acceptable range is [0 - 4]. 0 disables the effect." id="7" />
              <Parameter name="double voice timeshift" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="0.5" tooltip="&#x0A;&#x0A;sets the delay (seconds) between the doubled voice and the original one.&#x0A;Acceptable range is [0 - 0.5].&#x0A;" id="8" />
            </Box>
            <Box name="Eye Yellow" id="19" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="694" y="1">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 252, 25])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#fffc19</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Eye Pink" id="21" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="834" y="0">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([252, 46, 230])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#fc2ee6</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Twinkle" id="23" localization="8" tooltip="The selected LEDs flash on and off during the time defined in parameters." x="744" y="351">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                <Choice value="AllLeds" />
                <Choice value="BrainLeds" />
                <Choice value="EarLeds" />
                <Choice value="FaceLeds" />
                <Choice value="FeetLeds" />
                <Choice value="LeftEarLeds" />
                <Choice value="LeftFaceLeds" />
                <Choice value="LeftFootLeds" />
                <Choice value="RightEarLeds" />
                <Choice value="RightFaceLeds" />
                <Choice value="RightFootLeds" />
              </Parameter>
              <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
              <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
              <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="6" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                        <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                        <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                          <Choice value="AllLeds" />
                          <Choice value="BrainLeds" />
                          <Choice value="EarLeds" />
                          <Choice value="FaceLeds" />
                          <Choice value="FeetLeds" />
                          <Choice value="LeftEarLeds" />
                          <Choice value="LeftFaceLeds" />
                          <Choice value="LeftFootLeds" />
                          <Choice value="RightEarLeds" />
                          <Choice value="RightFaceLeds" />
                          <Choice value="RightFootLeds" />
                        </Parameter>
                        <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                        <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                      </Box>
                      <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                        <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                        <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                          <Choice value="AllLeds" />
                          <Choice value="BrainLeds" />
                          <Choice value="EarLeds" />
                          <Choice value="FaceLeds" />
                          <Choice value="FeetLeds" />
                          <Choice value="LeftEarLeds" />
                          <Choice value="LeftFaceLeds" />
                          <Choice value="LeftFootLeds" />
                          <Choice value="RightEarLeds" />
                          <Choice value="RightFaceLeds" />
                          <Choice value="RightFootLeds" />
                        </Parameter>
                        <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                        <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                      </Box>
                      <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                        <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                        <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                          <Choice value="AllLeds" />
                          <Choice value="BrainLeds" />
                          <Choice value="EarLeds" />
                          <Choice value="FaceLeds" />
                          <Choice value="FeetLeds" />
                          <Choice value="LeftEarLeds" />
                          <Choice value="LeftFaceLeds" />
                          <Choice value="LeftFootLeds" />
                          <Choice value="RightEarLeds" />
                          <Choice value="RightFaceLeds" />
                          <Choice value="RightFootLeds" />
                        </Parameter>
                        <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="165" y="14">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Animation duration (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped." id="4" />
                        <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                      </Box>
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                      <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                      <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Wipe Forehead" id="25" localization="8" tooltip="This box makes the robot wipe his forehead." x="1060" y="317">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="123">
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                    <Key frame="20" value="-13.4498" />
                    <Key frame="38" value="-35.6864" />
                    <Key frame="56" value="-6.50639" />
                    <Key frame="82" value="-1.58446" />
                    <Key frame="123" value="-2.11181" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                    <Key frame="20" value="-1.49656" />
                    <Key frame="38" value="24.5194" />
                    <Key frame="56" value="17.6638" />
                    <Key frame="82" value="-0.79343" />
                    <Key frame="123" value="3.51326" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                    <Key frame="16" value="49.4806" />
                    <Key frame="34" value="49.217" />
                    <Key frame="53" value="50.8869" />
                    <Key frame="68" value="53.26" />
                    <Key frame="79" value="58.2698" />
                    <Key frame="119" value="55.9846" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                    <Key frame="16" value="16.4333" />
                    <Key frame="34" value="13.1814" />
                    <Key frame="53" value="11.5993" />
                    <Key frame="68" value="23.2889" />
                    <Key frame="79" value="20.6522" />
                    <Key frame="119" value="18.2791" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                    <Key frame="16" value="-54.8468" />
                    <Key frame="34" value="-47.2003" />
                    <Key frame="53" value="-57.7473" />
                    <Key frame="68" value="-53.0011" />
                    <Key frame="79" value="-71.2826" />
                    <Key frame="119" value="-55.0226" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                    <Key frame="16" value="-49.6564" />
                    <Key frame="34" value="-49.7443" />
                    <Key frame="53" value="-47.1076" />
                    <Key frame="68" value="-56.8635" />
                    <Key frame="79" value="-55.3694" />
                    <Key frame="119" value="-56.7757" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                    <Key frame="34" value="22.1463" />
                    <Key frame="53" value="22.1463" />
                    <Key frame="68" value="22.1463" />
                    <Key frame="119" value="22.1463" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                    <Key frame="34" value="0.132026" />
                    <Key frame="53" value="0.132026" />
                    <Key frame="68" value="0.132026" />
                    <Key frame="119" value="0.132026" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                    <Key frame="12" value="4.39699" />
                    <Key frame="30" value="-34.0996" />
                    <Key frame="48" value="-49.6564" />
                    <Key frame="64" value="-35.1543" />
                    <Key frame="115" value="50.5401" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                    <Key frame="12" value="-1.145" />
                    <Key frame="30" value="-1.145" />
                    <Key frame="48" value="-35.247" />
                    <Key frame="64" value="-47.7276" />
                    <Key frame="115" value="-12.3072" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                    <Key frame="12" value="-7.38531" />
                    <Key frame="30" value="-16.3503" />
                    <Key frame="48" value="-8.96736" />
                    <Key frame="64" value="43.2403" />
                    <Key frame="115" value="38.8457" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                    <Key frame="12" value="73.392" />
                    <Key frame="30" value="80.0718" />
                    <Key frame="48" value="88.5" />
                    <Key frame="64" value="71.1068" />
                    <Key frame="115" value="48.1671" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                    <Key frame="30" value="-3.34229" />
                    <Key frame="48" value="-2.99072" />
                    <Key frame="64" value="-3.86964" />
                    <Key frame="115" value="-2.1997" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                    <Key frame="30" value="0.166571" />
                    <Key frame="48" value="0.166208" />
                    <Key frame="64" value="0.166571" />
                    <Key frame="115" value="0.166208" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                </ActuatorList>
              </Timeline>
              <Resource name="Head" type="Lock" timeout="0" />
              <Resource name="Arms" type="Lock" timeout="0" />
            </Box>
            <Box name="kid laugh" id="27" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="639" y="418">
              <bitmap>media/images/box/interaction/play_music.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/child-laughs.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
              <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
              <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
              <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
              <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                      </Box>
                      <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                        <bitmap>media/images/box/folder.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Audio player" type="Lock" timeout="0" />
            </Box>
            <Box name="knock" id="28" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="788" y="454">
              <bitmap>media/images/box/interaction/play_music.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../sounds/knock-on-door.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
              <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
              <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
              <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
              <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                      </Box>
                      <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                        <bitmap>media/images/box/folder.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Audio player" type="Lock" timeout="0" />
            </Box>
            <Box name="SetRobotVoice" id="29" localization="8" tooltip="say according to character for the Adventure book" x="820" y="102">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')

    def onInput_onStart(self):

        params_robot = {'pitchShift':1, 'doubleVoice':1.3, 'doubleVoiceLevel':1.5, 'doubleVoiceTimeShift':0.15}


        try:
            for k,v in params_robot.items():
                self.tts.setParameter(k, v)

        except:
            pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="Explain" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="756" y="285">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="200" size="200">
                <BehaviorLayer name="arm">
                  <BehaviorKeyframe name="armsBodyTalk" index="1" bitmap="media/images/box/movement/move_arm.png">
                    <Diagram>
                      <Box name="RandomIntMod" id="2" localization="8" tooltip="Generate a random number between 0 and a max number." x="478" y="28">
                        <bitmap>media/images/box/box-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(i, random.randint(0, 11))
            func = getattr( self, "output_" + str(self.aShuffled[self.nIndex]) )
            func()
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, 11 )
            else: # nMax should be = 0
                nVal = 0
            func = getattr( self, "output_" + str(nVal) )
            func()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                        <Output name="output_0" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                        <Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                        <Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                        <Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                        <Output name="output_5" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                        <Output name="output_6" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                        <Output name="output_7" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                        <Output name="output_8" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                        <Output name="output_9" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                        <Output name="output_10" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                        <Output name="output_11" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="1" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="15" />
                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="16" />
                      </Box>
                      <Box name="Anim_bodytalk1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1005" y="27">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="28">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="17" value="-71.6294" />
                              <Key frame="28" value="-80.2427" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="17" value="-108.197" />
                              <Key frame="28" value="-53.7921" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="17" value="0.181844" />
                              <Key frame="28" value="0.890909" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="17" value="66.9711" />
                              <Key frame="28" value="42.0977" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="17" value="8.78677" />
                              <Key frame="28" value="1.75543" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="17" value="2.98591" />
                              <Key frame="28" value="-11" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="14" value="67.679" />
                              <Key frame="27" value="86.8394" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="14" value="106.61" />
                              <Key frame="27" value="62.6644" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="14" value="0.161844" />
                              <Key frame="27" value="0.818182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="14" value="68.6458" />
                              <Key frame="27" value="48.4307" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="14" value="-7.38531" />
                              <Key frame="27" value="-4.92434" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="14" value="-14.8561" />
                              <Key frame="27" value="9" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk3" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1007" y="220">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="28">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="14" value="-65.4769" />
                              <Key frame="28" value="-57.2151" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="14" value="-36.038" />
                              <Key frame="28" value="-46.9366" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="28" value="0.345455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="14" value="58.5335" />
                              <Key frame="28" value="77.9576" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="14" value="9.57779" />
                              <Key frame="28" value="2.72224" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="28" value="-14" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="13" value="89.5017" />
                              <Key frame="25" value="83.2359" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="13" value="24.6952" />
                              <Key frame="25" value="85.4284" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="25" value="0.345455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="13" value="47.9913" />
                              <Key frame="25" value="44.2998" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="13" value="-18.2839" />
                              <Key frame="25" value="-3.43018" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="25" value="51" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk2" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1007" y="123">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="21">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="21" value="-78.7486" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="21" value="-82.5327" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="21" value="0.654545" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="21" value="40.1641" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="21" value="5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="21" value="9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="19" value="74.6225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="19" value="100.985" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="19" value="0.645455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="19" value="73.7436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="19" value="-6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="19" value="43" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="StandUp" id="6" localization="8" tooltip='Robot will go to the position &quot;StandUp&#x0A;Position description : &#x0A;' x="1009" y="318">
                        <bitmap>media/images/positions/StandUp_1.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="47">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="23" value="-31.5507" />
                              <Key frame="47" value="-32.2539" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="23" value="-64.5149" />
                              <Key frame="47" value="-56.6926" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="23" value="0.183662" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="23" value="89.1198" />
                              <Key frame="47" value="82.2643" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="23" value="6.67737" />
                              <Key frame="47" value="1.22808" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="23" value="5.79845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="21" value="33.577" />
                              <Key frame="45" value="45.1787" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="21" value="70.9262" />
                              <Key frame="45" value="59.3245" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="21" value="0.162208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="21" value="88.6852" />
                              <Key frame="45" value="86.8394" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="21" value="-3.07861" />
                              <Key frame="45" value="-0.705538" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="21" value="-16.526" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk4" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1011" y="417">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="31">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="15" value="-76.1997" />
                              <Key frame="31" value="-67.3227" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="15" value="6.67737" />
                              <Key frame="31" value="-90.7067" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="15" value="0.709091" />
                              <Key frame="31" value="0.334571" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="15" value="3.07381" />
                              <Key frame="31" value="2.54646" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="15" value="9.57779" />
                              <Key frame="31" value="7.20472" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="15" value="-25" />
                              <Key frame="31" value="-10.6373" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="14" value="72.0736" />
                              <Key frame="27" value="70.6674" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="14" value="73.0356" />
                              <Key frame="27" value="51.9416" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="14" value="0.254545" />
                              <Key frame="27" value="0.33748" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="14" value="92.904" />
                              <Key frame="27" value="86.5758" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="14" value="-9.31893" />
                              <Key frame="27" value="-6.24272" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="14" value="62" />
                              <Key frame="27" value="52.6447" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1011" y="516">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="36">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="19" value="-88.6803" />
                              <Key frame="36" value="-89.1198" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="19" value="-54.4953" />
                              <Key frame="36" value="-33.6649" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="36" value="0.454545" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="19" value="52.2053" />
                              <Key frame="36" value="46.1408" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="19" value="16.2576" />
                              <Key frame="36" value="6.15002" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="36" value="-45" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="18" value="88.9488" />
                              <Key frame="33" value="88.773" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="18" value="53.1721" />
                              <Key frame="33" value="78.9244" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="33" value="0.418182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="18" value="28.2156" />
                              <Key frame="33" value="40.1689" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="18" value="-1.0571" />
                              <Key frame="33" value="-0.881321" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="33" value="-17" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk5" id="9" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1012" y="614">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="33">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="17" value="-75.8482" />
                              <Key frame="33" value="-76.0239" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="17" value="-54.0558" />
                              <Key frame="33" value="-66.9759" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="33" value="0.507273" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="17" value="74.9692" />
                              <Key frame="33" value="69.2563" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="17" value="3.42537" />
                              <Key frame="33" value="5.62267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="33" value="-37" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="16" value="54.1437" />
                              <Key frame="31" value="57.5715" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="16" value="42.0098" />
                              <Key frame="31" value="67.5863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="31" value="0.592727" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="16" value="72.8646" />
                              <Key frame="31" value="72.9525" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="16" value="-3.95753" />
                              <Key frame="31" value="-3.43018" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="31" value="46.3" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk6" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1012" y="713">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="34">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="15" value="-52.7326" />
                              <Key frame="34" value="-60.4671" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="15" value="-26.3699" />
                              <Key frame="34" value="-108.988" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="34" value="0.727273" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="15" value="62.8402" />
                              <Key frame="34" value="59.1487" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="15" value="1.14019" />
                              <Key frame="34" value="6.94104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="34" value="-30" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="14" value="44.0362" />
                              <Key frame="31" value="75.3256" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="14" value="118.564" />
                              <Key frame="31" value="65.8285" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="31" value="0.509091" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="14" value="87.6305" />
                              <Key frame="31" value="70.8431" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="14" value="-1.40867" />
                              <Key frame="31" value="-0.498473" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="31" value="25" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk7" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1014" y="813">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="46">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-31.9902" />
                              <Key frame="46" value="-28.5624" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-57.4836" />
                              <Key frame="46" value="-65.5696" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="46" value="0.163636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="81.4732" />
                              <Key frame="46" value="86.6588" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="3.24959" />
                              <Key frame="46" value="9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="46" value="-11" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="19" value="39.9053" />
                              <Key frame="43" value="28.1278" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="19" value="69.7836" />
                              <Key frame="43" value="87.1862" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="43" value="0.2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="19" value="87.5426" />
                              <Key frame="43" value="88.1578" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="19" value="-1.23289" />
                              <Key frame="43" value="-2.1997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="43" value="-5.4" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk8" id="12" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1015" y="912">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="19" value="-43.0645" />
                              <Key frame="40" value="-58.0061" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="19" value="-106.615" />
                              <Key frame="40" value="-38.499" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="40" value="0.745455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="19" value="79.0123" />
                              <Key frame="40" value="68.641" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="19" value="1.22808" />
                              <Key frame="40" value="5.88634" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="40" value="-39" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="18" value="36.9169" />
                              <Key frame="37" value="64.0755" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="18" value="110.302" />
                              <Key frame="37" value="56.6878" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="37" value="0.818182" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="18" value="79.8081" />
                              <Key frame="37" value="75.853" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="18" value="-3.16651" />
                              <Key frame="37" value="-0.617646" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="37" value="12" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk9" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1016" y="1011">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="39">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="20" value="-43.504" />
                              <Key frame="39" value="-24.871" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="20" value="-37.3564" />
                              <Key frame="39" value="-79.8081" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="39" value="0.381818" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="20" value="71.8051" />
                              <Key frame="39" value="89.5593" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="20" value="1.49176" />
                              <Key frame="39" value="12.7419" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="39" value="-36" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="19" value="72.3373" />
                              <Key frame="37" value="45.7061" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="19" value="61.346" />
                              <Key frame="37" value="95.448" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="37" value="0.363636" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="19" value="88.8609" />
                              <Key frame="37" value="100.375" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="19" value="-1.93602" />
                              <Key frame="37" value="-6.50639" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="37" value="10" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalk11" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="1020" y="1115">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="43">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="15" value="-72.0688" />
                              <Key frame="24" value="-57.8303" />
                              <Key frame="33" value="-65.7406" />
                              <Key frame="43" value="-54.4905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="15" value="-11.9557" />
                              <Key frame="24" value="-41.1357" />
                              <Key frame="33" value="-47.9913" />
                              <Key frame="43" value="-78.3139" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="15" value="0.176364" />
                              <Key frame="43" value="0.507273" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="15" value="39.9883" />
                              <Key frame="24" value="52.0295" />
                              <Key frame="33" value="53.0842" />
                              <Key frame="43" value="57.7425" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="15" value="9.05044" />
                              <Key frame="24" value="9.66569" />
                              <Key frame="33" value="1.31597" />
                              <Key frame="43" value="4.48007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="24" value="-2" />
                              <Key frame="33" value="-71" />
                              <Key frame="43" value="-53" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="22" value="32.6981" />
                              <Key frame="41" value="28.4793" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="22" value="77.1665" />
                              <Key frame="41" value="93.3386" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="22" value="86.2242" />
                              <Key frame="41" value="91.3219" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="22" value="-0.617646" />
                              <Key frame="41" value="-8.79158" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="14" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                      <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="6" />
                      <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="7" />
                      <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="8" />
                      <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="9" />
                      <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="10" />
                      <Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="11" />
                      <Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="12" />
                      <Link inputowner="13" indexofinput="2" outputowner="2" indexofoutput="13" />
                      <Link inputowner="14" indexofinput="2" outputowner="2" indexofoutput="14" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <BehaviorLayer name="leg">
                  <BehaviorKeyframe name="legsBodyTalk" index="1" bitmap="media/images/box/movement/move_leg.png">
                    <Diagram>
                      <Box name="RandomIntMod" id="2" localization="8" tooltip="Generate a random number between 0 and a max number." x="314" y="78">
                        <bitmap>media/images/box/box-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import random;

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        # attributes needed in shuffle mode
        self.nMax = 1
        self.nIndex = -1
        self.aShuffled = []
        pass

    def onUnload(self):
         #puts code for box cleanup here
        pass

    def onInput_onStart(self):
        nMax = self.getParameter("max")
        if(self.getParameter("shuffle")):
            self.nIndex +=1
            if nMax != self.nMax or self.nIndex == self.nMax:
                if self.nIndex == self.nMax:
                    self.nIndex = 0
                self.nMax = nMax
                self.aShuffled = []
                for i in xrange(nMax):
                    self.aShuffled.insert(i, random.randint(0, 5))
            func = getattr( self, "output_" + str(self.aShuffled[self.nIndex]) )
            func()
        else: #random is much simpler
            if nMax > 0:
                nVal = random.randint( 0, nMax - 1 )
            else: # nMax should be = 0
                nVal = 0
            func = getattr( self, "output_" + str(nVal) )
            func()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="The max number of the random (excluded)" id="2" />
                        <Output name="output_0" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                        <Output name="output_1" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                        <Output name="output_2" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                        <Output name="output_3" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                        <Output name="output_4" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                        <Output name="output_5" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                        <Parameter name="max" inherits_from_parent="0" content_type="1" value="1" default_value="10" min="0" max="1000000000" tooltip="Output will stimulate a random number (integer) between 0 and max !" id="9" />
                        <Parameter name="shuffle" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Is it a real random, or do we want to shuffle ? (meaning the box will give all the number between 0 and max before giving the same number twice)." id="10" />
                      </Box>
                      <Box name="Anim_bodytalkLegs2" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="782" y="170">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="4.66067" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-2.72705" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="1.14019" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-16.3455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-4.48007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="13.0935" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="14.6803" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-16.9655" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalkLegs1" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="603" y="8">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-13.0935" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="14.6803" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="16.9655" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-16.3455" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="4.66067" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="2.72705" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-1.14019" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-4.48007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalkLegs4" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="784" y="365">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="7.55628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="4.39699" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="9.84628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-21.5311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="1.14019" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="5.45169" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="3.1617" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-5.44688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.10012" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalkLegs3" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="784" y="268">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.35899" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="11.8678" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="10.6373" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-16.6091" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="4.66067" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="7.03374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="13.5329" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-7.3805" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-4.48007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalkLegs5" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="785" y="463">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-5.97423" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="13.0983" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="9.23104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-20.9158" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="12.4782" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="-1.66754" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="5.3638" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="13.9724" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-7.90785" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="8.35212" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Anim_bodytalkLegs6" id="8" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="785" y="560">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="75">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="0.70073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="-4.2164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="2.11181" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="6.59428" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="75" value="-22.8494" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="13.2692" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="75" value="5.62747" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="75" value="4.3091" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHand" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="75" value="13.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="75" value="-4.65586" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="75" value="-2.28278" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="-1" />
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="-1" />
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                      <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                      <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="6" />
                      <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="7" />
                      <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="8" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Get Data" id="4" localization="8" tooltip="Retrieves from NAOqi&apos;s shared memory the given value at the given key." x="60" y="231">
              <bitmap>media/images/box/sensors/STM.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self):
        result = self.memory.getData(self.getParameter("key"))
        self.onStopped(int(result))

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the retrieved value from ALMemory." id="4" />
              <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" />
              <Parameter name="key" inherits_from_parent="0" content_type="3" value="adventure" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" />
            </Box>
            <Box name="Eye Blue" id="22" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="978" y="2">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([39, 45, 255])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#272dff</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Eye White" id="18" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="996" y="90">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 247])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#fffff7</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="run" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="920" y="294">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self, False)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="44">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="8" value="-63.8624" />
                    <Key frame="16" value="-74.9981" />
                    <Key frame="23" value="-63.8624" />
                    <Key frame="30" value="-74.9981" />
                    <Key frame="37" value="-64.269" />
                    <Key frame="44" value="-75.1392" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="8" value="-67.9921" />
                    <Key frame="16" value="-67.2304" />
                    <Key frame="23" value="-67.9921" />
                    <Key frame="30" value="-67.2304" />
                    <Key frame="37" value="-68.1489" />
                    <Key frame="44" value="-67.2165" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="8" value="0.293851" />
                    <Key frame="16" value="0.293851" />
                    <Key frame="23" value="0.293851" />
                    <Key frame="30" value="0.293851" />
                    <Key frame="37" value="0.293851" />
                    <Key frame="44" value="0.19" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="8" value="86.243" />
                    <Key frame="16" value="46.6207" />
                    <Key frame="23" value="86.243" />
                    <Key frame="30" value="46.6207" />
                    <Key frame="37" value="84.3447" />
                    <Key frame="44" value="100" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="8" value="12.8387" />
                    <Key frame="16" value="-4.27714" />
                    <Key frame="23" value="12.8387" />
                    <Key frame="30" value="-4.27714" />
                    <Key frame="37" value="12.5415" />
                    <Key frame="44" value="-4.89461" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="8" value="5.47864" />
                    <Key frame="16" value="-5.43309" />
                    <Key frame="23" value="5.47864" />
                    <Key frame="30" value="-5.43309" />
                    <Key frame="37" value="5.08895" />
                    <Key frame="44" value="-5.59584" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="8" value="75.2962" />
                    <Key frame="16" value="52.8962" />
                    <Key frame="23" value="75.2962" />
                    <Key frame="30" value="52.8962" />
                    <Key frame="37" value="74.7122" />
                    <Key frame="44" value="52.8694" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="8" value="67.4588" />
                    <Key frame="16" value="67.4588" />
                    <Key frame="23" value="67.4588" />
                    <Key frame="30" value="67.4588" />
                    <Key frame="37" value="67.4248" />
                    <Key frame="44" value="67.472" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="8" value="0.293851" />
                    <Key frame="16" value="0.293851" />
                    <Key frame="23" value="0.293851" />
                    <Key frame="30" value="0.293851" />
                    <Key frame="37" value="0.293851" />
                    <Key frame="44" value="0.293851" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="8" value="49.4982" />
                    <Key frame="16" value="68.6554" />
                    <Key frame="23" value="49.4982" />
                    <Key frame="30" value="68.6554" />
                    <Key frame="37" value="36.7024" />
                    <Key frame="44" value="69.2203" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="8" value="4.10924" />
                    <Key frame="16" value="-8.21456" />
                    <Key frame="23" value="4.10924" />
                    <Key frame="30" value="-8.21456" />
                    <Key frame="37" value="4.4908" />
                    <Key frame="44" value="-7.64409" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="8" value="5.64139" />
                    <Key frame="16" value="5.64139" />
                    <Key frame="23" value="5.64139" />
                    <Key frame="30" value="5.64139" />
                    <Key frame="37" value="5.64139" />
                    <Key frame="44" value="5.64139" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Link inputowner="16" indexofinput="2" outputowner="8" indexofoutput="4" />
            <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
            <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="4" />
            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="5" />
            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="6" />
            <Link inputowner="19" indexofinput="2" outputowner="3" indexofoutput="6" />
            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="7" />
            <Link inputowner="21" indexofinput="2" outputowner="3" indexofoutput="7" />
            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="8" />
            <Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="8" />
            <Link inputowner="29" indexofinput="2" outputowner="3" indexofoutput="9" />
            <Link inputowner="18" indexofinput="2" outputowner="3" indexofoutput="9" />
            <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="10" />
            <Link inputowner="10" indexofinput="2" outputowner="3" indexofoutput="11" />
            <Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="12" />
            <Link inputowner="23" indexofinput="2" outputowner="3" indexofoutput="13" />
            <Link inputowner="13" indexofinput="2" outputowner="3" indexofoutput="14" />
            <Link inputowner="25" indexofinput="2" outputowner="3" indexofoutput="15" />
            <Link inputowner="27" indexofinput="2" outputowner="3" indexofoutput="16" />
            <Link inputowner="28" indexofinput="2" outputowner="3" indexofoutput="17" />
            <Link inputowner="18" indexofinput="2" outputowner="23" indexofoutput="4" />
            <Link inputowner="15" indexofinput="3" outputowner="3" indexofoutput="18" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
